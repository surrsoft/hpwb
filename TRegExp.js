// IPv4.
// Examples valid: 1.1.1.1 .
// Examples invalid: 256.1.1.1 .
module.exports.RG_IP = new RegExp('^(?:(?:2(?:[0-4][0-9]|5[0-5])|[0-1]?[0-9]?[0-9])\\.){3}(?:(?:2([0-4][0-9]|5[0-5])|[0-1]?[0-9]?[0-9]))$', 'gi');

// IPv4 in normal format and CIDR format.
// Examples valid: 1.1.1.1, 1.1.1.1/1, 1.1.1.1/32 .
// Examples invalid: 256.1.1.1, 1.1.1.1/, 1.1.1.1/33 .
module.exports.RG_IP_CIDR = new RegExp('^(?:(?:2(?:[0-4][0-9]|5[0-5])|[0-1]?[0-9]?[0-9])\\.){3}(?:(?:2([0-4][0-9]|5[0-5])|[0-1]?[0-9]?[0-9]))(?:\\/\\d{1,1}|\\/[1-2][0-9]|\\/[1-3][0-2]|)$', 'gi');

// IP port
// Examples valid: 1, 65000, 65535
// Examples invalid: 0, 65536, a
module.exports.RG_PORT = new RegExp('^()([1-9]|[1-5]?[0-9]{2,4}|6[1-4][0-9]{3}|65[1-4][0-9]{2}|655[1-2][0-9]|6553[1-5])$');

// IP ports through space
// Examples valid: '1', '1 1', '65535 65535'
// Examples invalid: '0', '65536', '65535 65535 ', '65535 65536'
module.exports.RG_PORTS = new RegExp('(^([1-9]|[1-5]?[0-9]{2,4}|6[1-4][0-9]{3}|65[1-4][0-9]{2}|655[1-2][0-9]|6553[1-5])$)|(^((([1-9]|[1-5]?[0-9]{2,4}|6[1-4][0-9]{3}|65[1-4][0-9]{2}|655[1-2][0-9]|6553[1-5]))\\s)+(([1-9]|[1-5]?[0-9]{2,4}|6[1-4][0-9]{3}|65[1-4][0-9]{2}|655[1-2][0-9]|6553[1-5]))$)');

module.exports.RG_URI_QUERY = '^(?:(?:(?:[A-Za-z0-9_.\\-~]+))|(?:(?:[A-Za-z0-9_.\\-~]+)(?:\/(?:[A-Za-z0-9_.\\-~]+))+))$';

module.exports.RG_DOMAIN_NAME = new RegExp('([a-z0-9A-Z]\\.)*[a-z0-9-]+\\.([a-z0-9]{2,24})+(\\.co\\.([a-z0-9]{2,24})|\\.([a-z0-9]{2,24}))*', 'gi');
